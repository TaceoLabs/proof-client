{
  "openapi": "3.1.0",
  "info": {
    "title": "TACEO:Proof - CCL",
    "description": "",
    "contact": {
      "name": "TACEO GmbH",
      "email": "hello@taceo.io"
    },
    "license": {
      "name": "MIT",
      "identifier": "MIT"
    },
    "version": "1.0"
  },
  "paths": {
    "/admin/nps/invitation/create": {
      "post": {
        "tags": [
          "Admin"
        ],
        "operationId": "create_invitation_code",
        "responses": {
          "200": {
            "description": "Generated a new invitation code and returns it",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "You are not an admin"
          }
        },
        "security": [
          {
            "adminAuth": []
          }
        ]
      }
    },
    "/admin/nps/invitation/list": {
      "get": {
        "tags": [
          "Admin"
        ],
        "operationId": "paginate_invitations",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of invitation codes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResult_String"
                }
              }
            }
          },
          "403": {
            "description": "You are not an admin"
          }
        },
        "security": [
          {
            "adminAuth": []
          }
        ]
      }
    },
    "/admin/nps/invitation/revoke": {
      "post": {
        "tags": [
          "Admin"
        ],
        "operationId": "revoke_invitation_code",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RevokeInvitationCode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The provided code was revoked"
          },
          "403": {
            "description": "You are not an admin"
          }
        },
        "security": [
          {
            "adminAuth": []
          }
        ]
      }
    },
    "/admin/user/create": {
      "post": {
        "tags": [
          "Admin"
        ],
        "operationId": "create_user",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User has been generated"
          },
          "403": {
            "description": "Not an admin"
          }
        },
        "security": [
          {
            "adminAuth": []
          }
        ]
      }
    },
    "/api/v1/blueprint/code": {
      "post": {
        "tags": [
          "blueprint"
        ],
        "summary": "create a new job",
        "operationId": "issue_cosnark_code",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IssueCoSnarkCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The code that enables issuing a coSNARK job",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/blueprint/create": {
      "post": {
        "tags": [
          "blueprint"
        ],
        "summary": "create a new coSNARK blueprint",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateBlueprintRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Scheduled the new job",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBlueprintResponse"
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/v1/blueprint/{id}/aux/{aux_type}": {
      "post": {
        "tags": [
          "blueprint"
        ],
        "summary": "add proving key to blueprint",
        "operationId": "upload_aux_data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the blueprint",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "aux_type",
            "in": "path",
            "description": "The type of the auxiliary data",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AuxiliaryType"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sucessfully added the auxiliary data"
          },
          "400": {
            "description": "e.g. Aux type is not needed for this blueprint"
          },
          "401": {
            "description": "Logged-in user is not allowed to perform that action"
          },
          "404": {
            "description": "Unknown blueprint id"
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/v1/blueprint/{id}/key-material": {
      "get": {
        "tags": [
          "blueprint"
        ],
        "summary": "returns the key material of the NPSs associated with the blueprint",
        "operationId": "blueprint_key_material",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the blueprint",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The key material of the NPSs that are used to encrypt shared inputs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NpsKeyMaterial"
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/blueprint/{id}/ready": {
      "get": {
        "tags": [
          "blueprint"
        ],
        "summary": "checks whether a blueprint is already ready",
        "operationId": "blueprint_ready",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the blueprint",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicating whether the blueprint is ready. If not ready provides information about what data is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlueprintReadyProbe"
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "welcome",
        "responses": {
          "200": {
            "description": "The landing page"
          }
        }
      }
    },
    "/api/v1/jobs/job/{id}": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "get job result",
        "operationId": "get_result",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The uuid of the job",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns job status and if present the finished proof or error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResult"
                }
              }
            }
          },
          "404": {
            "description": "No such job"
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/schedule": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "create a new job",
        "operationId": "schedule_job",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "a_blueprint_id",
                  "b_job_type",
                  "c_code",
                  "input_party0",
                  "input_party1",
                  "input_party2"
                ],
                "properties": {
                  "a_blueprint_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "b_job_type": {
                    "$ref": "#/components/schemas/JobType"
                  },
                  "c_code": {
                    "type": "string"
                  },
                  "input_party0": {
                    "type": "string",
                    "format": "binary"
                  },
                  "input_party1": {
                    "type": "string",
                    "format": "binary"
                  },
                  "input_party2": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Schedule a new job",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleJobResponse"
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/nps/list": {
      "get": {
        "tags": [
          "NPS"
        ],
        "summary": "get paginated node providers - used for blueprint creators to define clusters",
        "operationId": "list",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of NPS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResult_NpsHeader"
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "operationId": "health",
        "responses": {
          "200": {
            "description": "The manager is healthy"
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/health/live": {
      "get": {
        "tags": [
          "Health"
        ],
        "operationId": "live",
        "responses": {
          "200": {
            "description": "The manager is healthy"
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/health/ready": {
      "get": {
        "tags": [
          "Health"
        ],
        "operationId": "ready",
        "responses": {
          "200": {
            "description": "The manager is healthy"
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "get_login",
        "parameters": [
          {
            "name": "next",
            "in": "query",
            "required": false,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The login form"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "post_login",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Credentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The user is logged in and redirected to the next page"
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "Successful logout"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "AuxiliaryType": {
        "type": "string",
        "enum": [
          "pk",
          "vk",
          "circuit",
          "matrices"
        ]
      },
      "BlueprintCurve": {
        "type": "string",
        "enum": [
          "Bn254",
          "Bls381",
          "Bls377"
        ]
      },
      "BlueprintReadyProbe": {
        "type": "object",
        "required": [
          "missing_aux_data"
        ],
        "properties": {
          "missing_aux_data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuxiliaryType"
            }
          }
        }
      },
      "BlueprintType": {
        "type": "string",
        "enum": [
          "CircomGroth16",
          "LibsnarkGroth16",
          "NoirUltrahonk"
        ]
      },
      "CreateBlueprintRequest": {
        "type": "object",
        "required": [
          "name",
          "typ",
          "curve",
          "node_provider0",
          "node_provider1",
          "node_provider2"
        ],
        "properties": {
          "curve": {
            "$ref": "#/components/schemas/BlueprintCurve"
          },
          "name": {
            "type": "string"
          },
          "node_provider0": {
            "type": "integer",
            "format": "int32"
          },
          "node_provider1": {
            "type": "integer",
            "format": "int32"
          },
          "node_provider2": {
            "type": "integer",
            "format": "int32"
          },
          "typ": {
            "$ref": "#/components/schemas/BlueprintType"
          }
        }
      },
      "CreateBlueprintResponse": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "Credentials": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "next": {
            "type": [
              "string",
              "null"
            ]
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "IssueCoSnarkCodeRequest": {
        "type": "object",
        "required": [
          "amount",
          "validity_in_seconds"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "validity_in_seconds": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "JobResult": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "error": {
            "type": [
              "string",
              "null"
            ]
          },
          "ok": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ProofResult"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/JobStatus"
          }
        }
      },
      "JobStatus": {
        "type": "string",
        "enum": [
          "Pending",
          "InProgress",
          "Failed",
          "Success"
        ]
      },
      "JobType": {
        "type": "string",
        "enum": [
          "Rep3Full",
          "Rep3Prove",
          "ShamirProve"
        ]
      },
      "NpsHeader": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "NpsKeyMaterial": {
        "type": "object",
        "required": [
          "name",
          "enc_key",
          "verify_key"
        ],
        "properties": {
          "enc_key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "verify_key": {
            "type": "string"
          }
        }
      },
      "PaginationResult_NpsHeader": {
        "type": "object",
        "required": [
          "elements"
        ],
        "properties": {
          "elements": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "total_amount": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "PaginationResult_String": {
        "type": "object",
        "required": [
          "elements"
        ],
        "properties": {
          "elements": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "total_amount": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "ProofResult": {
        "type": "object",
        "required": [
          "proof",
          "public_inputs"
        ],
        "properties": {
          "proof": {
            "type": "string"
          },
          "public_inputs": {
            "type": "string"
          }
        }
      },
      "RevokeInvitationCode": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string"
          }
        }
      },
      "ScheduleJobResponse": {
        "type": "object",
        "required": [
          "job_id",
          "remaining_permits"
        ],
        "properties": {
          "job_id": {
            "type": "string",
            "format": "uuid"
          },
          "remaining_permits": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "taceo-proof-ccl",
      "description": "TACEO:Proof - Cryptographic Coordination Layer"
    }
  ]
}
