/* tslint:disable */
/* eslint-disable */
/**
 * Private Proof Delegation-CCL
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@taceo.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuxiliaryType } from './AuxiliaryType';
import {
    AuxiliaryTypeFromJSON,
    AuxiliaryTypeFromJSONTyped,
    AuxiliaryTypeToJSON,
    AuxiliaryTypeToJSONTyped,
} from './AuxiliaryType';

/**
 * 
 * @export
 * @interface BlueprintReadyProbe
 */
export interface BlueprintReadyProbe {
    /**
     * 
     * @type {Array<AuxiliaryType>}
     * @memberof BlueprintReadyProbe
     */
    missingAuxData: Array<AuxiliaryType>;
    /**
     * 
     * @type {boolean}
     * @memberof BlueprintReadyProbe
     */
    nodesReady: boolean;
}

/**
 * Check if a given object implements the BlueprintReadyProbe interface.
 */
export function instanceOfBlueprintReadyProbe(value: object): value is BlueprintReadyProbe {
    if (!('missingAuxData' in value) || value['missingAuxData'] === undefined) return false;
    if (!('nodesReady' in value) || value['nodesReady'] === undefined) return false;
    return true;
}

export function BlueprintReadyProbeFromJSON(json: any): BlueprintReadyProbe {
    return BlueprintReadyProbeFromJSONTyped(json, false);
}

export function BlueprintReadyProbeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlueprintReadyProbe {
    if (json == null) {
        return json;
    }
    return {
        
        'missingAuxData': ((json['missing_aux_data'] as Array<any>).map(AuxiliaryTypeFromJSON)),
        'nodesReady': json['nodes_ready'],
    };
}

export function BlueprintReadyProbeToJSON(json: any): BlueprintReadyProbe {
    return BlueprintReadyProbeToJSONTyped(json, false);
}

export function BlueprintReadyProbeToJSONTyped(value?: BlueprintReadyProbe | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'missing_aux_data': ((value['missingAuxData'] as Array<any>).map(AuxiliaryTypeToJSON)),
        'nodes_ready': value['nodesReady'],
    };
}

