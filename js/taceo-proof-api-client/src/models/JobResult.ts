/* tslint:disable */
/* eslint-disable */
/**
 * TACEO:Proof - CCL
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@taceo.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { JobStatus } from './JobStatus';
import {
    JobStatusFromJSON,
    JobStatusFromJSONTyped,
    JobStatusToJSON,
    JobStatusToJSONTyped,
} from './JobStatus';
import type { ProofResult } from './ProofResult';
import {
    ProofResultFromJSON,
    ProofResultFromJSONTyped,
    ProofResultToJSON,
    ProofResultToJSONTyped,
} from './ProofResult';

/**
 * 
 * @export
 * @interface JobResult
 */
export interface JobResult {
    /**
     * 
     * @type {string}
     * @memberof JobResult
     */
    error?: string | null;
    /**
     * 
     * @type {ProofResult}
     * @memberof JobResult
     */
    ok?: ProofResult | null;
    /**
     * 
     * @type {JobStatus}
     * @memberof JobResult
     */
    status: JobStatus;
}



/**
 * Check if a given object implements the JobResult interface.
 */
export function instanceOfJobResult(value: object): value is JobResult {
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function JobResultFromJSON(json: any): JobResult {
    return JobResultFromJSONTyped(json, false);
}

export function JobResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobResult {
    if (json == null) {
        return json;
    }
    return {
        
        'error': json['error'] == null ? undefined : json['error'],
        'ok': json['ok'] == null ? undefined : ProofResultFromJSON(json['ok']),
        'status': JobStatusFromJSON(json['status']),
    };
}

export function JobResultToJSON(json: any): JobResult {
    return JobResultToJSONTyped(json, false);
}

export function JobResultToJSONTyped(value?: JobResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'error': value['error'],
        'ok': ProofResultToJSON(value['ok']),
        'status': JobStatusToJSON(value['status']),
    };
}

