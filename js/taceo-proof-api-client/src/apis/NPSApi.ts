/* tslint:disable */
/* eslint-disable */
/**
 * TACEO:Proof - CCL
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@taceo.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiError,
  PaginationResultNpsHeader,
} from '../models/index';
import {
    ApiErrorFromJSON,
    ApiErrorToJSON,
    PaginationResultNpsHeaderFromJSON,
    PaginationResultNpsHeaderToJSON,
} from '../models/index';

export interface ListRequest {
    cursor?: number | null;
    perPage?: number | null;
}

/**
 * 
 */
export class NPSApi extends runtime.BaseAPI {

    /**
     * get paginated node providers - used for blueprint creators to define clusters
     */
    async listRaw(requestParameters: ListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginationResultNpsHeader>> {
        const queryParameters: any = {};

        if (requestParameters['cursor'] != null) {
            queryParameters['cursor'] = requestParameters['cursor'];
        }

        if (requestParameters['perPage'] != null) {
            queryParameters['per_page'] = requestParameters['perPage'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/nps/list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaginationResultNpsHeaderFromJSON(jsonValue));
    }

    /**
     * get paginated node providers - used for blueprint creators to define clusters
     */
    async list(requestParameters: ListRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginationResultNpsHeader> {
        const response = await this.listRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
