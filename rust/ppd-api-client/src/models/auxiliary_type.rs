/*
 * Private Proof Delegation-CCL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@taceo.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AuxiliaryType {
    #[serde(rename = "Pk")]
    Pk,
    #[serde(rename = "Vk")]
    Vk,
    #[serde(rename = "Circuit")]
    Circuit,
}

impl std::fmt::Display for AuxiliaryType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Pk => write!(f, "Pk"),
            Self::Vk => write!(f, "Vk"),
            Self::Circuit => write!(f, "Circuit"),
        }
    }
}

impl Default for AuxiliaryType {
    fn default() -> AuxiliaryType {
        Self::Pk
    }
}
