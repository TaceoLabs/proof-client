/*
 * Private Proof Delegation-CCL
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@taceo.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum JobStatus {
    #[serde(rename = "WaitingForInputs")]
    WaitingForInputs,
    #[serde(rename = "WaitingForNodes")]
    WaitingForNodes,
    #[serde(rename = "InProgress")]
    InProgress,
    #[serde(rename = "Failed")]
    Failed,
    #[serde(rename = "Success")]
    Success,
}

impl std::fmt::Display for JobStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::WaitingForInputs => write!(f, "WaitingForInputs"),
            Self::WaitingForNodes => write!(f, "WaitingForNodes"),
            Self::InProgress => write!(f, "InProgress"),
            Self::Failed => write!(f, "Failed"),
            Self::Success => write!(f, "Success"),
        }
    }
}

impl Default for JobStatus {
    fn default() -> JobStatus {
        Self::WaitingForInputs
    }
}
